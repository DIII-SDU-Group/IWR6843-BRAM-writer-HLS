

================================================================
== Vitis HLS Report for 'mmWBramWriter'
================================================================
* Date:           Tue Mar 29 18:44:17 2022

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)
* Project:        IWR_BRAM_writer
* Solution:       mmWaveBramWriter (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu3eg-sbva484-1-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.950 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------+---------+---------+----------+-----------+-----------+------+----------+
        |              |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------+---------+---------+----------+-----------+-----------+------+----------+
        |- load_loop   |       32|       32|         2|          1|          1|    32|       yes|
        |- write_loop  |        ?|        ?|         5|          -|          -|     ?|        no|
        +--------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 4 3 
3 --> 2 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 5 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.48>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_3"   --->   Operation 10 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i128 %buffer_in, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 11 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i128 %buffer_in"   --->   Operation 12 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %buffer_out, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 13 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i32 %buffer_out, i64 666, i64 207, i64 4294967295"   --->   Operation 14 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %buffer_out"   --->   Operation 15 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_1, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_2, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 16 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%buffer_V = alloca i64 1" [mmWaveBramWriter.cpp:17]   --->   Operation 17 'alloca' 'buffer_V' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 128> <Depth = 32> <RAM>
ST_1 : Operation 18 [1/1] (0.48ns)   --->   "%br_ln30 = br void" [mmWaveBramWriter.cpp:30]   --->   Operation 18 'br' 'br_ln30' <Predicate = true> <Delay = 0.48>

State 2 <SV = 1> <Delay = 1.35>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%i = phi i6 %add_ln30, void %.split5, i6 0, void" [mmWaveBramWriter.cpp:30]   --->   Operation 19 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%last_point = phi i1 %last_point_1, void %.split5, i1 0, void"   --->   Operation 20 'phi' 'last_point' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%n_points_1 = phi i32 %n_points, void %.split5, i32 32, void"   --->   Operation 21 'phi' 'n_points_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.88ns)   --->   "%add_ln30 = add i6 %i, i6 1" [mmWaveBramWriter.cpp:30]   --->   Operation 22 'add' 'add_ln30' <Predicate = true> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.90> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 23 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.87ns)   --->   "%icmp_ln30 = icmp_eq  i6 %i, i6 32" [mmWaveBramWriter.cpp:30]   --->   Operation 24 'icmp' 'icmp_ln30' <Predicate = true> <Delay = 0.87> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 32, i64 32, i64 32"   --->   Operation 25 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln30 = br i1 %icmp_ln30, void %.split5, void %_Z10loadBufferP7ap_uintILi128EES1_.exit" [mmWaveBramWriter.cpp:30]   --->   Operation 26 'br' 'br_ln30' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%i_cast = zext i6 %i" [mmWaveBramWriter.cpp:30]   --->   Operation 27 'zext' 'i_cast' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%buffer_in_addr = getelementptr i128 %buffer_in, i64 0, i64 %i_cast"   --->   Operation 28 'getelementptr' 'buffer_in_addr' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 29 [2/2] (1.35ns)   --->   "%buffer_in_load = load i5 %buffer_in_addr"   --->   Operation 29 'load' 'buffer_in_load' <Predicate = (!icmp_ln30)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 128> <Depth = 32> <RAM>

State 3 <SV = 2> <Delay = 4.95>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%specloopname_ln27 = specloopname void @_ssdm_op_SpecLoopName, void @empty_5" [mmWaveBramWriter.cpp:27]   --->   Operation 30 'specloopname' 'specloopname_ln27' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_3 : Operation 31 [1/2] (1.35ns)   --->   "%buffer_in_load = load i5 %buffer_in_addr"   --->   Operation 31 'load' 'buffer_in_load' <Predicate = (!icmp_ln30)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 128> <Depth = 32> <RAM>
ST_3 : Operation 32 [1/1] (1.46ns)   --->   "%icmp_ln870 = icmp_eq  i128 %buffer_in_load, i128 0"   --->   Operation 32 'icmp' 'icmp_ln870' <Predicate = (!icmp_ln30)> <Delay = 1.46> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node n_points)   --->   "%trunc_ln32 = trunc i6 %i" [mmWaveBramWriter.cpp:32]   --->   Operation 33 'trunc' 'trunc_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node n_points)   --->   "%zext_ln32 = zext i5 %trunc_ln32" [mmWaveBramWriter.cpp:32]   --->   Operation 34 'zext' 'zext_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node n_points)   --->   "%select_ln32 = select i1 %last_point, i32 %n_points_1, i32 %zext_ln32" [mmWaveBramWriter.cpp:32]   --->   Operation 35 'select' 'select_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (0.52ns) (out node of the LUT)   --->   "%n_points = select i1 %icmp_ln870, i32 %select_ln32, i32 %n_points_1" [mmWaveBramWriter.cpp:32]   --->   Operation 36 'select' 'n_points' <Predicate = (!icmp_ln30)> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 37 [1/1] (0.33ns)   --->   "%last_point_1 = or i1 %icmp_ln870, i1 %last_point" [mmWaveBramWriter.cpp:32]   --->   Operation 37 'or' 'last_point_1' <Predicate = (!icmp_ln30)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%buffer_V_addr = getelementptr i128 %buffer_V, i64 0, i64 %i_cast" [mmWaveBramWriter.cpp:30]   --->   Operation 38 'getelementptr' 'buffer_V_addr' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.45ns)   --->   "%select_ln39 = select i1 %last_point_1, i128 0, i128 %buffer_in_load" [mmWaveBramWriter.cpp:39]   --->   Operation 39 'select' 'select_ln39' <Predicate = (!icmp_ln30)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 40 [1/1] (1.35ns)   --->   "%store_ln42 = store i128 %select_ln39, i5 %buffer_V_addr" [mmWaveBramWriter.cpp:42]   --->   Operation 40 'store' 'store_ln42' <Predicate = (!icmp_ln30)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 128> <Depth = 32> <RAM>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 41 'br' 'br_ln0' <Predicate = (!icmp_ln30)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 1.35>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%buffer_out_addr = getelementptr i32 %buffer_out, i64 0, i64 0" [mmWaveBramWriter.cpp:52]   --->   Operation 42 'getelementptr' 'buffer_out_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (1.35ns)   --->   "%store_ln52 = store i32 %n_points_1, i8 %buffer_out_addr" [mmWaveBramWriter.cpp:52]   --->   Operation 43 'store' 'store_ln52' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM_1P">   --->   Core 88 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 129> <RAM>
ST_4 : Operation 44 [1/1] (0.48ns)   --->   "%br_ln54 = br void" [mmWaveBramWriter.cpp:54]   --->   Operation 44 'br' 'br_ln54' <Predicate = true> <Delay = 0.48>

State 5 <SV = 3> <Delay = 1.35>
ST_5 : Operation 45 [1/1] (0.00ns)   --->   "%i_1 = phi i32 %add_ln54, void %.split, i32 0, void %_Z10loadBufferP7ap_uintILi128EES1_.exit" [mmWaveBramWriter.cpp:54]   --->   Operation 45 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 46 [1/1] (1.20ns)   --->   "%add_ln54 = add i32 %i_1, i32 1" [mmWaveBramWriter.cpp:54]   --->   Operation 46 'add' 'add_ln54' <Predicate = true> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.90> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln54 = zext i32 %i_1" [mmWaveBramWriter.cpp:54]   --->   Operation 47 'zext' 'zext_ln54' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 48 [1/1] (1.11ns)   --->   "%icmp_ln54 = icmp_eq  i32 %i_1, i32 %n_points_1" [mmWaveBramWriter.cpp:54]   --->   Operation 48 'icmp' 'icmp_ln54' <Predicate = true> <Delay = 1.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 49 [1/1] (0.00ns)   --->   "%br_ln54 = br i1 %icmp_ln54, void %.split, void %_Z11writeBufferP7ap_uintILi128EEPji.exit.loopexit" [mmWaveBramWriter.cpp:54]   --->   Operation 49 'br' 'br_ln54' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 50 [1/1] (0.00ns)   --->   "%buffer_V_addr_1 = getelementptr i128 %buffer_V, i64 0, i64 %zext_ln54"   --->   Operation 50 'getelementptr' 'buffer_V_addr_1' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_5 : Operation 51 [2/2] (1.35ns)   --->   "%p_Val2_s = load i5 %buffer_V_addr_1"   --->   Operation 51 'load' 'p_Val2_s' <Predicate = (!icmp_ln54)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 128> <Depth = 32> <RAM>
ST_5 : Operation 52 [1/1] (0.00ns)   --->   "%trunc_ln60 = trunc i32 %i_1" [mmWaveBramWriter.cpp:60]   --->   Operation 52 'trunc' 'trunc_ln60' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_5 : Operation 53 [1/1] (0.00ns)   --->   "%ret_ln23 = ret" [mmWaveBramWriter.cpp:23]   --->   Operation 53 'ret' 'ret_ln23' <Predicate = (icmp_ln54)> <Delay = 0.00>

State 6 <SV = 4> <Delay = 2.70>
ST_6 : Operation 54 [1/2] (1.35ns)   --->   "%p_Val2_s = load i5 %buffer_V_addr_1"   --->   Operation 54 'load' 'p_Val2_s' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 128> <Depth = 32> <RAM>
ST_6 : Operation 55 [1/1] (0.00ns)   --->   "%p_Result_s = partselect i32 @_ssdm_op_PartSelect.i32.i128.i32.i32, i128 %p_Val2_s, i32 96, i32 127"   --->   Operation 55 'partselect' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 56 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i6.i2, i6 %trunc_ln60, i2 0" [mmWaveBramWriter.cpp:60]   --->   Operation 56 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 57 [1/1] (0.00ns)   --->   "%or_ln57 = or i8 %shl_ln, i8 1" [mmWaveBramWriter.cpp:57]   --->   Operation 57 'or' 'or_ln57' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln57 = zext i8 %or_ln57" [mmWaveBramWriter.cpp:57]   --->   Operation 58 'zext' 'zext_ln57' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 59 [1/1] (0.00ns)   --->   "%buffer_out_addr_1 = getelementptr i32 %buffer_out, i64 0, i64 %zext_ln57" [mmWaveBramWriter.cpp:57]   --->   Operation 59 'getelementptr' 'buffer_out_addr_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 60 [1/1] (1.35ns)   --->   "%store_ln57 = store i32 %p_Result_s, i8 %buffer_out_addr_1" [mmWaveBramWriter.cpp:57]   --->   Operation 60 'store' 'store_ln57' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM_1P">   --->   Core 88 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 129> <RAM>
ST_6 : Operation 61 [1/1] (0.00ns)   --->   "%p_Result_1 = partselect i32 @_ssdm_op_PartSelect.i32.i128.i32.i32, i128 %p_Val2_s, i32 64, i32 95"   --->   Operation 61 'partselect' 'p_Result_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 62 [1/1] (0.00ns)   --->   "%p_Result_2 = partselect i32 @_ssdm_op_PartSelect.i32.i128.i32.i32, i128 %p_Val2_s, i32 32, i32 63"   --->   Operation 62 'partselect' 'p_Result_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 63 [1/1] (0.00ns)   --->   "%trunc_ln708 = trunc i128 %p_Val2_s"   --->   Operation 63 'trunc' 'trunc_ln708' <Predicate = true> <Delay = 0.00>

State 7 <SV = 5> <Delay = 1.35>
ST_7 : Operation 64 [1/1] (0.00ns)   --->   "%or_ln58 = or i8 %shl_ln, i8 2" [mmWaveBramWriter.cpp:58]   --->   Operation 64 'or' 'or_ln58' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln58 = zext i8 %or_ln58" [mmWaveBramWriter.cpp:58]   --->   Operation 65 'zext' 'zext_ln58' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 66 [1/1] (0.00ns)   --->   "%buffer_out_addr_2 = getelementptr i32 %buffer_out, i64 0, i64 %zext_ln58" [mmWaveBramWriter.cpp:58]   --->   Operation 66 'getelementptr' 'buffer_out_addr_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 67 [1/1] (1.35ns)   --->   "%store_ln58 = store i32 %p_Result_1, i8 %buffer_out_addr_2" [mmWaveBramWriter.cpp:58]   --->   Operation 67 'store' 'store_ln58' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM_1P">   --->   Core 88 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 129> <RAM>

State 8 <SV = 6> <Delay = 1.35>
ST_8 : Operation 68 [1/1] (0.00ns)   --->   "%or_ln59 = or i8 %shl_ln, i8 3" [mmWaveBramWriter.cpp:59]   --->   Operation 68 'or' 'or_ln59' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln59 = zext i8 %or_ln59" [mmWaveBramWriter.cpp:59]   --->   Operation 69 'zext' 'zext_ln59' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 70 [1/1] (0.00ns)   --->   "%buffer_out_addr_3 = getelementptr i32 %buffer_out, i64 0, i64 %zext_ln59" [mmWaveBramWriter.cpp:59]   --->   Operation 70 'getelementptr' 'buffer_out_addr_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 71 [1/1] (1.35ns)   --->   "%store_ln59 = store i32 %p_Result_2, i8 %buffer_out_addr_3" [mmWaveBramWriter.cpp:59]   --->   Operation 71 'store' 'store_ln59' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM_1P">   --->   Core 88 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 129> <RAM>

State 9 <SV = 7> <Delay = 2.25>
ST_9 : Operation 72 [1/1] (0.00ns)   --->   "%specloopname_ln54 = specloopname void @_ssdm_op_SpecLoopName, void @empty_4" [mmWaveBramWriter.cpp:54]   --->   Operation 72 'specloopname' 'specloopname_ln54' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 73 [1/1] (0.90ns)   --->   "%add_ln60 = add i8 %shl_ln, i8 4" [mmWaveBramWriter.cpp:60]   --->   Operation 73 'add' 'add_ln60' <Predicate = true> <Delay = 0.90> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.90> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln60 = zext i8 %add_ln60" [mmWaveBramWriter.cpp:60]   --->   Operation 74 'zext' 'zext_ln60' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 75 [1/1] (0.00ns)   --->   "%buffer_out_addr_4 = getelementptr i32 %buffer_out, i64 0, i64 %zext_ln60" [mmWaveBramWriter.cpp:60]   --->   Operation 75 'getelementptr' 'buffer_out_addr_4' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 76 [1/1] (1.35ns)   --->   "%store_ln60 = store i32 %trunc_ln708, i8 %buffer_out_addr_4" [mmWaveBramWriter.cpp:60]   --->   Operation 76 'store' 'store_ln60' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM_1P">   --->   Core 88 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 129> <RAM>
ST_9 : Operation 77 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 77 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.489ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i', mmWaveBramWriter.cpp:30) with incoming values : ('add_ln30', mmWaveBramWriter.cpp:30) [13]  (0.489 ns)

 <State 2>: 1.35ns
The critical path consists of the following:
	'phi' operation ('i', mmWaveBramWriter.cpp:30) with incoming values : ('add_ln30', mmWaveBramWriter.cpp:30) [13]  (0 ns)
	'getelementptr' operation ('buffer_in_addr') [24]  (0 ns)
	'load' operation ('buffer_in_load') on array 'buffer_in' [25]  (1.35 ns)

 <State 3>: 4.95ns
The critical path consists of the following:
	'load' operation ('buffer_in_load') on array 'buffer_in' [25]  (1.35 ns)
	'icmp' operation ('icmp_ln870') [26]  (1.46 ns)
	'or' operation ('last_point', mmWaveBramWriter.cpp:32) [31]  (0.331 ns)
	'select' operation ('select_ln39', mmWaveBramWriter.cpp:39) [33]  (0.454 ns)
	'store' operation ('store_ln42', mmWaveBramWriter.cpp:42) of variable 'select_ln39', mmWaveBramWriter.cpp:39 on array 'buffer.V', mmWaveBramWriter.cpp:17 [34]  (1.35 ns)

 <State 4>: 1.35ns
The critical path consists of the following:
	'getelementptr' operation ('buffer_out_addr', mmWaveBramWriter.cpp:52) [37]  (0 ns)
	'store' operation ('store_ln52', mmWaveBramWriter.cpp:52) of variable 'n_points' on array 'buffer_out' [38]  (1.35 ns)

 <State 5>: 1.35ns
The critical path consists of the following:
	'phi' operation ('i', mmWaveBramWriter.cpp:54) with incoming values : ('add_ln54', mmWaveBramWriter.cpp:54) [41]  (0 ns)
	'getelementptr' operation ('buffer_V_addr_1') [48]  (0 ns)
	'load' operation ('__Val2__') on array 'buffer.V', mmWaveBramWriter.cpp:17 [49]  (1.35 ns)

 <State 6>: 2.7ns
The critical path consists of the following:
	'load' operation ('__Val2__') on array 'buffer.V', mmWaveBramWriter.cpp:17 [49]  (1.35 ns)
	'store' operation ('store_ln57', mmWaveBramWriter.cpp:57) of variable 'p_Result_s' on array 'buffer_out' [56]  (1.35 ns)

 <State 7>: 1.35ns
The critical path consists of the following:
	'or' operation ('or_ln58', mmWaveBramWriter.cpp:58) [58]  (0 ns)
	'getelementptr' operation ('buffer_out_addr_2', mmWaveBramWriter.cpp:58) [60]  (0 ns)
	'store' operation ('store_ln58', mmWaveBramWriter.cpp:58) of variable 'p_Result_1' on array 'buffer_out' [61]  (1.35 ns)

 <State 8>: 1.35ns
The critical path consists of the following:
	'or' operation ('or_ln59', mmWaveBramWriter.cpp:59) [63]  (0 ns)
	'getelementptr' operation ('buffer_out_addr_3', mmWaveBramWriter.cpp:59) [65]  (0 ns)
	'store' operation ('store_ln59', mmWaveBramWriter.cpp:59) of variable 'p_Result_2' on array 'buffer_out' [66]  (1.35 ns)

 <State 9>: 2.26ns
The critical path consists of the following:
	'add' operation ('add_ln60', mmWaveBramWriter.cpp:60) [68]  (0.907 ns)
	'getelementptr' operation ('buffer_out_addr_4', mmWaveBramWriter.cpp:60) [70]  (0 ns)
	'store' operation ('store_ln60', mmWaveBramWriter.cpp:60) of variable 'trunc_ln708' on array 'buffer_out' [71]  (1.35 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
